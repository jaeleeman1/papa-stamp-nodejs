<ul class="my-card-list" id="card-list">
    <% var shopListCnt = shopListData.length %>
    <% for (var i=0; i<shopListCnt; i++) {%>
    <li class="my-card-shop" id="<%= shopListData[i].SHOP_ID %>">
        <div class="my-container">
            <% var shopId = shopListData[i].SHOP_ID
                var shopFrontImg = shopListData[i].SHOP_FRONT_IMG
                var shopBackImg = shopListData[i].SHOP_BACK_IMG
                var shopStampImg = shopListData[i].SHOP_STAMP_IMG %>
            <div class="my-card" onclick="focusOpenLayer('layerCardPopup', '<%= shopId %>', '<%= shopFrontImg %>', '<%= shopBackImg %>', '<%=shopStampImg %>');">
                <figure class="front">
                    <img class="base-img" src="/images/shop-card/<%= shopBackImg %>" alt="back">
                    <div class="img-repeat">
                        <% var userStamp = (shopListData[i].USER_STAMP % 10)  %>
                        <% for (var j=1; j<=userStamp; j++) {%>
                        <div class="papa_stamp_icon" id="papa_stamp_icon_<%=j%>">
                            <img class="stamp-img" src="/images/shop-stamp/<%= shopStampImg %>"></img>
                        </div>
                        <%}%>
                    </div>
                </figure>
            </div>
        </div>
    </li>
    <%}%>
</ul>

<div id="layerCardPopup">
    <div class="pop_up_body">
        <p class="btn_txt_nor mt20"><span class="delete-card" id="delete_card">카드 삭제</span><span onclick="closeLayer('layerCardPopup')">닫기</span></p>
        <div class="card-img">
            <div class="container">
                <div class="card flipped" id="popup-card">
                </div>
            </div>
        </div>
        <p class="ti">해당 지점 쿠폰 사용</p>
    </div>
</div>


<script type="text/javascript">
    function deleteCard(shopId) {
        var userId = $("#userId").val();
        var dataString = {'shop_id': shopId};
        var headers = {};
        headers["user_id"] = userId;

        $.ajax({
            url: $("#url").val() + '/v1/stamp/deleteCard',
            type: 'PUT',
            headers : headers,
            dataType: 'json',
            data : dataString,
            success: function(data) {
                if(data.result = 'success') {
                    location.reload();
                }else {
                    console.error('error');
                }
            },
            error: function(request, status, error) {
                console.error("used delete card : code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
            }
        });
    }

    function focusOpenLayer(showDivId, shopId, frontImg, backImg, stampImg) {
        var userId = $("#userId").val();
        var dataString = {'shop_id': shopId};
        var headers = {};
        headers["user_id"] = userId;

        $.ajax({
            url: $("#url").val() + '/v1/stamp/selectStampDate',
            type: 'GET',
            headers : headers,
            dataType: 'json',
            data : dataString,
            success: function(data) {
                var browserHeight = $(document).height();
                var scrollPosition = $(document).scrollTop();
                $('#delete_card').click(function() { deleteCard(shopId) });
                var popupCardData = document.getElementById('popup-card');
                var appendData = '<figure class="front">' +
                    '<img class="base-img" src="/images/shop-card/'+ frontImg +'" alt="front">' +
                    '</figure>' +
                    '<figure class="back">' +
                    '<img class="base-img" src="/images/shop-card/'+ backImg +'" alt="back">' +
                    '<div class="img-repeat">';
                for(var i=0; i<data.stampDate.length; i++) {
                    appendData += '<div class="papa_stamp_icon" id="papa_stamp_icon_'+i+'>">'+
                        '<img class="stamp-img" src="/images/shop-stamp/'+ stampImg +'"><span class="stamp-date">'+data.stampDate[i].REG_DT+'</span></img>'+
                        '</div>';
                }
                appendData += '</div>' +
                    '</figure>';
                popupCardData.innerHTML = appendData;

                openLayer(showDivId, scrollPosition + 450, 0, browserHeight);
            },
            error: function(request, status, error) {
                console.error("used stamp date : code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
            }
        });
    }

    function stampActionOpenLayer(showDivId, shopId, frontImg, backImg, stampImg) {
        document.getElementById(shopId).scrollIntoView();

        var userId = $("#userId").val();
        var dataString = {'shop_id': shopId};
        var headers = {};
        headers["user_id"] = userId;

        $.ajax({
            url: $("#url").val() + '/v1/stamp/selectStampDate',
            type: 'GET',
            headers : headers,
            dataType: 'json',
            data : dataString,
            success: function(data) {
                var browserHeight = $(document).height();
                var scrollPosition = $(document).scrollTop();
                var popupCardData = document.getElementById('popup-card');
                var appendData = '<figure class="front">' +
                    '<img class="base-img" src="/images/shop-card/'+ frontImg +'" alt="front">' +
                    '</figure>' +
                    '<figure class="back">' +
                    '<img class="base-img" src="/images/shop-card/'+ backImg +'" alt="back">' +
                    '<img id="stamp-action" class="stamp-action" src="/images/shop-stamp/'+ stampImg +'"/>' +
                    '<div class="img-repeat">';
                for(var i=0; i<data.stampDate.length; i++) {
                    appendData += '<div class="papa_stamp_icon" id="papa_stamp_icon_'+i+'>">'+
                        '<img class="stamp-img" src="/images/shop-stamp/'+ stampImg +'"><span class="stamp-date">'+data.stampDate[i].REG_DT+'</span></img>'+
                        '</div>';
                }
                appendData += '</div>' +
                    '</figure>';
                popupCardData.innerHTML = appendData;

                openLayer(showDivId, scrollPosition + 450, 0, browserHeight);
            },
            error: function(request, status, error) {
                console.error("used stamp date : code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
            }
        });
    }
</script>


<!--<script src="https://whereareevent.com:8060/socket.io/socket.io.js"></script>-->
<script src="http://localhost:8060/socket.io/socket.io.js"></script>
<script type="text/javascript">
    var pushUserId = $("#userId").val();
    /*var socket = io.connect('https://whereareevent.com:8060');*/
    var socket = io.connect('http://localhost:8060');
    socket.on(pushUserId, function(data){
        var visitRateCnt = data.stampCnt % 10;
        var shopId = data.sendId;
        console.log(data.stampCnt);
        if(data.stampCnt == 1) {
            var appendId = $('#common-template');
            var appendData = '<ul class="my-card-list" id="card-list">' +
                '<li class="my-card-shop" id="'+ shopId +'">'+
                '<div class="my-container">' +
                '<div class="my-card" onclick="focusOpenLayer('+'\'layerCardPopup\''+', \'' + shopId +'\', \''+ data.stampData.SHOP_FRONT_IMG +'\', \''+ data.stampData.SHOP_BACK_IMG +'\', \''+ data.stampData.SHOP_STAMP_IMG +'\')">' +
                '<figure class="front">' +
                '<img class="base-img" src="/images/shop-card/'+ data.stampData.SHOP_BACK_IMG +'" alt="back">' +
                '<div class="img-repeat">';
                '<div class="papa_stamp_icon" id="papa_stamp_icon_1>">' +
                '<img class="stamp-img" src="/images/shop-stamp/'+ data.stampData.SHOP_STAMP_IMG +'"/>' +
                '</div>' +
                '</div>' +
                '</figure>' +
                '</div>' +
                '</div>' +
                '</li>' +
                '</ul>';
            appendId.append(appendData);
        }

        stampActionOpenLayer('layerCardPopup', shopId, data.stampData.SHOP_FRONT_IMG, data.stampData.SHOP_BACK_IMG, data.stampData.SHOP_STAMP_IMG);

        setTimeout(function() {
            $('#stamp-action').remove();
            if (data.stampCnt>0 && visitRateCnt==0) {
                var headers = {};
                headers["user_id"] = pushUserId;
                var dataString = {'shop_id': shopId};
                $.ajax({
                    url: $("#url").val() + '/v1/coupon/couponData',
                    type: 'PUT',
                    headers : headers,
                    dataType: 'json',
                    data : dataString,
                    success: function(data) {
                        $("#"+shopId).find($(".img-repeat")).remove();
                        //Toast Success Message
                        $.toast.config.align = 'right';
                        $.toast.config.width = 500;
                        $.toast('<h4>쿠폰</h4> 발급이 완료되었습니다.', { type: 'info', duration: 5000 } );
                    },
                    error: function(request, status, error) {
                        console.error("selectStampDate : code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
                    }
                });
            }else {
                var appendStamp = '<div class="papa_stamp_icon" id="papa_stamp_icon">' +
                    '<img class="stamp-img" src="/images/shop-stamp/'+ data.stampData.SHOP_STAMP_IMG +'"/>'+
                    '</div>';
                $("#"+shopId).find($(".img-repeat")).append(appendStamp);
            }
        }, 5000);
    });
</script>

<script type="text/javascript">
    var map='';

    function mapPapaShop() {
        var currentLat = $("#current_lat").val();
        var currentLng = $("#current_lng").val();

        var currentMarkerSrc = '/images/shop-map/current_point.png', // 현재 위치 마커이미지
            currentMarkerSize = new daum.maps.Size(55, 80), // 현재 위치 마커이미지의 크기
            currentMarkerOption = {offset: new daum.maps.Point(27, 69)}; // 현재 위치 마커이미지의 옵션

        var currentMarkerImage = new daum.maps.MarkerImage(currentMarkerSrc, currentMarkerSize, currentMarkerOption);
        var currentMarkerPosition = new daum.maps.LatLng(currentLat, currentLng); // 마커가 표시될 위치

        // 마커와 인포윈도우를 표시합니다
        displayMarker(currentMarkerPosition, currentMarkerImage);

        var cooperatorShopUrl ='/mapData/cooperator/papaShop.json';

        //shop list data 초기화
        var shopDataList = document.getElementById('map_list_wrap');
        shopDataList.innerHTML = '';

        // 마커 클러스터러를 생성합니다
        var clusterer = new daum.maps.MarkerClusterer({
            map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체
            averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정
            minLevel: 8 // 클러스터 할 최소 지도 레벨
        });

        var selectedMarker = null;

        userShopList(currentLat, currentLng);
    }

    //Shop List
    function userShopList(currentLat, currentLng) {
        var headers = {};
        headers["user_id"] = $("#userId").val();

        //var initShopId = $("#initShopId").val();

        var dataString = {'current_lat': currentLat, 'current_lng': currentLng};
        $.ajax({
            url: $("#url").val() + '/v1/stamp/shopList',
            type: 'GET',
            headers : headers,
            dataType: 'json',
            data: dataString,
            success: function(data) {
                var shopData = data.shopListData;
                if(shopData.length == 0) { //|| shopData[0].USER_ID == initShopId) {

                }else {
                    var mypositions = [];

                    for(var i=0; i<shopData.length; i++) {
                        mypositions[i] = {'index': i, 'lat': shopData[i].SHOP_LAT,'lng': shopData[i].SHOP_LNG,'stamp': shopData[i].USER_STAMP};
                    }

                    showClusterer(mypositions);
                }
            },
            error: function(request, status, error) {
                console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
                console.log('Error occured');
            }
        });
    }

    function showClusterer(mypositions) {
        // 마커 클러스터러를 생성합니다
        var clusterer = new daum.maps.MarkerClusterer({
            map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체
            averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정
            minLevel: 8 // 클러스터 할 최소 지도 레벨
        });

        var selectedMarker = null;
        var changeImage = null;

        var markers = $(mypositions).map(function (i, position) {
            var convertStamp = position.stamp % 10;

            var imageSrc = '/images/shop-map/my_point'+convertStamp+'.png';
            var clickImageSrc = '/images/shop-map/select_point'+convertStamp+'.png';

            // 표시될 shop data
            var imageSize = new daum.maps.Size(55, 80), // 마커이미지의 크기입니다
                imageOprion = {offset: new daum.maps.Point(27, 69)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.
            var normalImage = new daum.maps.MarkerImage(imageSrc, imageSize, imageOprion);

            // 클릭된 shop data
            var clickImageSize = new daum.maps.Size(55, 80), // 마커이미지의 크기입니다
                clickImageOprion = {offset: new daum.maps.Point(27, 69)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.
            var clickImage = new daum.maps.MarkerImage(clickImageSrc, clickImageSize, clickImageOprion);

            var marker = new daum.maps.Marker({
                position: new daum.maps.LatLng(position.lat, position.lng),
                image: normalImage
            });

            daum.maps.event.addListener(marker, 'click', function () {
                if(selectedMarker == null) {
                    marker.setImage(clickImage);
                    changeImage = normalImage;
                }else if(selectedMarker !== marker) {
                    marker.setImage(clickImage);
                    !!selectedMarker && selectedMarker.setImage(changeImage);
                    changeImage = normalImage;
                }

                // 클릭된 마커를 현재 클릭된 마커 객체로 설정합니다
                selectedMarker = marker;
                var headers = {};
                headers["user_id"] = $("#userId").val();

                //shop data
                var dataString = {'current_lat': position.lat, 'current_lng': position.lng};
                $.ajax({
                    url: $("#url").val() + '/v1/stamp/shopData',
                    type: 'GET',
                    headers : headers,
                    dataType: 'json',
                    data: dataString,
                    success: function (data) {
                        var shopData = data.shopData;
                        var userId = data.userId;
                        var clickMapData = document.getElementById('map_list_wrap');
                        clickMapData.innerHTML = '';

                        clickMapData.innerHTML += '<div class="address-row">' +
                            '<div class="col-xs-10 address-right">' +
                            '<a href="javascript:"><div class="icon" onclick="guidePapaShopLoad('+ shopData.SHOP_LAT+','+ shopData.SHOP_LNG+')"><img class="guide" src="/images/shop-map/map_load_pin.png"></div></a>' +
                            '<div class="select-shop-name">'+ shopData.SHOP_NAME +
                            '<span class="select-shop-sub-name">(' + shopData.SHOP_SUB_NAME + ')</span>' +
                            '<span class="select-shop-phone"><i class="fa fa-phone" style="font-size: 30px;margin-right:10px;"></i> : '+ shopData.SHOP_PHONE +'</span>' +
                            '<p class="select-shop-addr"><i class="fa fa-home" style="font-size: 30px;margin-right:10px;"></i> : '+ shopData.SHOP_ADDR +'</p>' +
                            '</div>' +
                            '</div>' +
                            '</div>';

                        var appendId = $('#common-template');
                        var appendData = '<ul class="my-card-list" id="select-card">' +
                            '<li class="my-card-shop" id="'+ shopData.SHOP_ID +'">'+
                            '<div class="my-container">' +
                            '<div class="my-card" onclick="focusOpenLayer('+'\'layerCardPopup\''+', \'' + shopData.SHOP_ID +'\', \''+ shopData.SHOP_FRONT_IMG +'\', \''+ shopData.SHOP_BACK_IMG +'\', \''+ shopData.SHOP_STAMP_IMG +'\')">' +
                            '<figure class="front">' +
                            '<img class="base-img" src="/images/shop-card/'+ shopData.SHOP_BACK_IMG +'" alt="back">' +
                            '<div class="img-repeat">';
                            for(var i=0; i<shopData.USER_STAMP; i++) {
                                appendData += '<div class="papa_stamp_icon" id="papa_stamp_icon_'+i+'>">' +
                                '<img class="stamp-img" src="/images/shop-stamp/'+ shopData.SHOP_STAMP_IMG +'"/>' +
                                '</div>';
                            }
                            appendData += '</div>' +
                            '</figure>' +
                            '</div>' +
                            '</div>' +
                            '</li>' +
                            '</ul>';
                        if($('#select-card').length) {
                            $('#select-card').remove();
                            appendId.append(appendData);
                        }else {
                            appendId.append(appendData);
                        }
                    },
                    error: function (request, status, error) {
                        console.log("code:" + request.status + "\n" + "message:" + request.responseText + "\n" + "error:" + error);
                        console.log('Error occured');
                    }
                });
            });

            if(i == 0) {
                daum.maps.event.trigger(marker, 'click', '');
            }

            return marker;
        });

        // 클러스터러에 마커들을 추가합니다
        clusterer.addMarkers(markers);
    }

    // 지도에 마커와 인포윈도우를 표시하는 함수입니다
    function displayMarker(currentMarkerPosition, currentMarkerImage) {
        map = new daum.maps.Map(document.getElementById('map'), { // 지도를 표시할 div
            center : currentMarkerPosition, // 지도의 중심좌표
            level : 8 // 지도의 확대 레벨
        });

        // 현재 위치 마커를 생성합니다
        var marker = new daum.maps.Marker({
            map: map,
            position: currentMarkerPosition,
            image: currentMarkerImage // 마커이미지 설정
        });
        marker.setMap(map);
    }

    function guidePapaShopLoad(shopLat, shopLng) {
        // 지도를 재설정할 범위정보를 가지고 있을 LatLngBounds 객체를 생성합니다
        var bounds = new daum.maps.LatLngBounds();

        var mouseEvent = {
            latLng: new daum.maps.LatLng(shopLat, shopLng)
        };

        daum.maps.event.trigger(map, 'click', mouseEvent);

        // LatLngBounds 객체에 좌표를 추가합니다
        bounds.extend(new daum.maps.LatLng(shopLat, shopLng));

        // LatLngBounds 객체에 추가된 좌표들을 기준으로 지도의 범위를 재설정합니다. 이때 지도의 중심좌표와 레벨이 변경될 수 있습니다
        map.setBounds(bounds);
    }

    // 지도 확대, 축소 컨트롤에서 확대 버튼을 누르면 호출되어 지도를 확대하는 함수입니다
    function zoomIn() {
        map.setLevel(map.getLevel() - 1);
    }

    // 지도 확대, 축소 컨트롤에서 축소 버튼을 누르면 호출되어 지도를 확대하는 함수입니다
    function zoomOut() {
        map.setLevel(map.getLevel() + 1);
    }
</script>