<ul class="my-card-list" id="card-list">
    <% var couponListCnt = couponListData.length %>
    <% if(couponListCnt > 0) { %>
    <% for (var i=0; i<couponListCnt; i++) {%>
    <% var shopID = couponListData[i].SHOP_ID
        var shopName = couponListData[i].SHOP_NAME
        var shopSubName = couponListData[i].SHOP_SUB_NAME
        var couponImg = couponListData[i].COUPON_IMG
        var couponName = couponListData[i].COUPON_NAME
        var couponPrice = couponListData[i].COUPON_PRICE
        var expirationDate = couponListData[i].EXPIRATION_DT
        var couponNumber = couponListData[i].COUPON_NUMBER
        var usedDate = couponListData[i].USED_DT
        var usedYn = couponListData[i].USED_YN %>
    <%if(usedYn == 'Y') {%>
    <li class="my-card-coupon used-deemed" id="<%= shopID %>-<%= couponNumber %>">
        <%}else {%>
    <li class="my-card-coupon" id="<%= shopID %>-<%= couponNumber %>">
        <%}%>
        <div class="my-container">
            <div class="my-card">
                <figure class="front">
                    <img class="base-img" src="/images/shop-coupon/<%= couponImg %>" alt="back">
                    <div class="caption">
                        <%if(usedYn == 'Y') {%>
                        <h5 class="delete-coupon" onclick="deleteCoupon('<%= shopID %>', '<%= couponNumber %>');">삭제하기</h5>
                        <h3><%= shopName %><span>(<%= shopSubName %>)</span></h3>
                        <h4><%= couponName %><span><%= couponPrice %>원</span></h4>
                        <div class="coupon-name" id="use-coupon-date-btn">사용날짜 : <span style="font-size:1em;color:white"><%= usedDate %></span></div>
                        <h6>✿ 유효 기간 : <%= expirationDate %></h6>
                        <%}else {%>
                        <h5 id="use-coupon-btn" onclick="useCoupon('<%= shopID %>', '<%= shopName %>', '<%= shopSubName %>', '<%= couponName %>', '<%= couponNumber %>')">사용하기</h5>
                        <h3><%= shopName %><span>(<%= shopSubName %>)</span></h3>
                        <h4><%= couponName %><span><%= couponPrice %>원</span></h4>
                        <div class="coupon-name" id="use-coupon-date-btn">쿠폰 번호 : <span style="font-size:1em;color:white"><%= couponNumber %></span></div>
                        <h6>✿ 유효 기간 : <%= expirationDate %></h6>
                        <%}%>
                    </div>
                </figure>
            </div>
        </div>
    </li>
    <%}%>
    <%} else {%>
    <li class="my-card-coupon blank-card">
        <div class="my-container">
            <div class="my-card">
                <figure class="front">
                    <img class="base-img" src="/images/shop-coupon/default-coupon.png" alt="back">
                    <div class="caption">
                        <h6>적립한 쿠폰이 없습니다.
                            <br></br>
                            설정-튜토리얼에서 스탬프 및 쿠폰 적립 방법을
                            <br></br>
                            확인해 보세요.
                        </h6>
                    </div>
                </figure>
            </div>
        </div>
    </li>
    <%}%>
</ul>

<div id="use-coupon-confirm" class="dialog-confirm">
    <figure>
        <h5 class="confirm-coupon-number" id="confirm-coupon-number"></h5>
        <h3 class="confirm-shop-name" id="confirm-shop-name"></h3>
        <h4 class="confirm-coupon-name" id="confirm-coupon-name"></h4>
        해당 쿠폰을 사용하시겠습니까?
    </figure>
</div>

<div id="delete-coupon-confirm" class="dialog-confirm">
    <figure>
        <div style="margin-top: 15px;">사용하신 쿠폰을 삭제하시겠습니까?</div>
    </figure>
</div>

<script type="text/javascript">
    function useCouponAndroid() {
        var usedDate = new Date().toISOString().slice(0,16).replace("T",", ");
        document.getElementById("use-coupon-btn").className = 'delete-coupon';
        document.getElementById("use-coupon-btn").onclick = function(){deleteCoupon();};
        document.getElementById("use-coupon-btn").innerHTML = '삭제하기';
        document.getElementById("use-coupon-date-btn").innerHTML = '사용날짜 : ' + '<span style="font-size:1em;color:white">' + usedDate +'</span>';
        $("#"+shopId+"-"+couponNumber).addClass("used-deemed");
    }

    function useCouponCallback(shopId, couponNumber) {
        var dataString = {'shop_id': shopId};

        $.ajax({
            url: $("#url").val() + '/v1/user/shopIdToBeacon',
            type: 'GET',
            dataType: 'json',
            data : dataString,
            success: function(data) {
                var shopBeacon = data.shopBeacon;
                if(window.Bridge) {
                    window.Bridge.callSettingsActivity(shopId, shopBeacon, couponNumber);
                }
            },
            error: function(request, status, error) {
                console.error("use coupon : code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
            }
        });
    }

    function deleteCouponCallback(shopId, couponNumber) {
        var userId = $("#user_d").val();
        var dataString = {'shop_id': shopId, 'coupon_number': couponNumber};
        var headers = {};
        headers["user_id"] = userId;

        $.ajax({
            url: $("#url").val() + '/v1/coupon/deleteCoupon',
            type: 'PUT',
            headers : headers,
            dataType: 'json',
            data : dataString,
            success: function(data) {
                location.reload();
            },
            error: function(request, status, error) {
                console.error("use coupon : code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
            }
        });
    }

    function useCoupon(shopId, shopName, shopSubName, couponName, couponNum) {
        document.getElementById("confirm-coupon-number").innerHTML= couponNum;
        document.getElementById("confirm-shop-name").innerHTML= shopName+'<span class="confirm-sub-name">('+ shopSubName +')</span>';
        document.getElementById("confirm-coupon-name").innerHTML= couponName;
        $("#use-coupon-confirm").dialog({
            resizable: false,
            modal: true,
            title: "쿠폰 사용",
            height: 350,
            width: '90%',
            resizable:false,
            buttons: {
                "예": function () {
                    $('#delete_card').unbind('click');
                    useCouponCallback(shopId, couponNum);
                    $(this).dialog('close');
                },
                "아니오": function () {
                    $(this).dialog('close');
                }
            }
        });
    }

    function deleteCoupon(shopId, couponNum) {
        $("#delete-coupon-confirm").dialog({
            resizable: false,
            modal: true,
            title: "쿠폰 삭제",
            height: 200,
            width: '90%',
            resizable:false,
            buttons: {
                "예": function () {
                    $('#delete_card').unbind('click');
                    $(this).dialog('close');
                    deleteCouponCallback(shopId, couponNum);
                },
                "아니오": function () {
                    $open = 'intent://whereareevent.com/#Intent;scheme=google_test;package=com.subin.papastamp;end;';
                    $(this).dialog('close');
                }
            }
        });
    }
</script>

<script type="text/javascript">
    var map='';

    function mapPapaShop() {
        var currentLat = $("#current_lat").val();
        var currentLng = $("#current_lng").val();

        var currentMarkerSrc = '/images/shop-map/current_point.png', // 현재 위치 마커이미지
            currentMarkerSize = new daum.maps.Size(26, 40), // 현재 위치 마커이미지의 크기
            currentMarkerOption = {offset: new daum.maps.Point(13, 35)}; // 현재 위치 마커이미지의 옵션

        var currentMarkerImage = new daum.maps.MarkerImage(currentMarkerSrc, currentMarkerSize, currentMarkerOption);
        var currentMarkerPosition = new daum.maps.LatLng(currentLat, currentLng); // 마커가 표시될 위치

        // 마커와 인포윈도우를 표시합니다
        displayMarker(currentMarkerPosition, currentMarkerImage);

        var cooperatorShopUrl ='/mapData/cooperator/papaShop.json';

        //shop list data 초기화
        var shopDataList = document.getElementById('map_list_wrap');
        shopDataList.innerHTML = '';

        // 마커 클러스터러를 생성합니다
        var clusterer = new daum.maps.MarkerClusterer({
            map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체
            averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정
            minLevel: 8 // 클러스터 할 최소 지도 레벨
        });

        var selectedMarker = null;

        userShopList(currentLat, currentLng);
    }

    //Shop List
    function userShopList(currentLat, currentLng) {
        var headers = {};
        headers["user_id"] = $("#user_id").val();

        //var initShopId = $("#initShopId").val();

        var dataString = {'current_lat': currentLat, 'current_lng': currentLng};
        $.ajax({
            url: $("#url").val() + '/v1/coupon/shopList',
            type: 'GET',
            headers : headers,
            dataType: 'json',
            data: dataString,
            success: function(data) {
                var shopData = data.shopListData;
                if(shopData.length == 0) { //|| shopData[0].USER_ID == initShopId) {

                }else {
                    var mypositions = [];

                    for(var i=0; i<shopData.length; i++) {
                        mypositions[i] = {'index': i, 'lat': shopData[i].SHOP_LAT,'lng': shopData[i].SHOP_LNG};
                    }

                    showClusterer(mypositions);
                }
            },
            error: function(request, status, error) {
                console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
                console.log('Error occured');
            }
        });
    }

    function showClusterer(mypositions) {
        // 마커 클러스터러를 생성합니다
        var clusterer = new daum.maps.MarkerClusterer({
            map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체
            averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정
            minLevel: 8 // 클러스터 할 최소 지도 레벨
        });

        var selectedMarker = null;
        var changeImage = null;
        var markers = $(mypositions).map(function (i, position) {
            var imageSrc = '/images/shop-map/shop_point.png';
            var clickImageSrc = '/images/shop-map/select_point.png';

            // 표시될 shop data
            var imageSize = new daum.maps.Size(26, 40), // 마커이미지의 크기입니다
                imageOprion = {offset: new daum.maps.Point(13, 35)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.
            var normalImage = new daum.maps.MarkerImage(imageSrc, imageSize, imageOprion);

            // 클릭된 shop data
            var clickImageSize = new daum.maps.Size(26, 40), // 마커이미지의 크기입니다
                clickImageOprion = {offset: new daum.maps.Point(13, 35)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.
            var clickImage = new daum.maps.MarkerImage(clickImageSrc, clickImageSize, clickImageOprion);

            var marker = new daum.maps.Marker({
                position: new daum.maps.LatLng(position.lat, position.lng),
                image: normalImage
            });

            daum.maps.event.addListener(marker, 'click', function () {
                if(selectedMarker == null) {
                    marker.setImage(clickImage);
                    changeImage = normalImage;
                }else if(selectedMarker !== marker) {
                    marker.setImage(clickImage);
                    !!selectedMarker && selectedMarker.setImage(changeImage);
                    changeImage = normalImage;
                }

                // 클릭된 마커를 현재 클릭된 마커 객체로 설정합니다
                selectedMarker = marker;
                var headers = {};
                headers["user_id"] = $("#user_id").val();

                //shop data
                var dataString = {'current_lat': position.lat, 'current_lng': position.lng};
                $.ajax({
                    url: $("#url").val() + '/v1/coupon/shopData',
                    type: 'GET',
                    headers : headers,
                    dataType: 'json',
                    data: dataString,
                    success: function (data) {
                        var shopData = data.shopData;
                        var userId = data.userId;
                        var usedYn = shopData.USED_YN;
                        var clickMapData = document.getElementById('map_list_wrap');
                        clickMapData.innerHTML = '';

                        clickMapData.innerHTML += '<div class="address-row">' +
                            '<div class="col-xs-10 address-right">' +
                            '<a href="javascript:"><div class="icon" onclick="guidePapaShopLoad('+ shopData.SHOP_LAT+','+ shopData.SHOP_LNG+')"><img class="guide" src="/images/shop-map/map_load_pin.png"></div></a>' +
                            '<div class="select-shop-name">'+ shopData.SHOP_NAME +
                            '<span class="select-shop-sub-name">(' + shopData.SHOP_SUB_NAME + ')</span>' +
                            '<span class="select-shop-phone"><i class="fa fa-phone" style="font-size: 16px;margin-left:5px;"></i> : '+ shopData.SHOP_PHONE +'</span>' +
                            '<p class="select-shop-addr"><i class="fa fa-home" style="font-size: 16px;margin-left:5px;"></i> : '+ shopData.SHOP_ADDR +'</p>' +
                            '</div>' +
                            '</div>' +
                            '</div>';

                        var appendId = $('#common-template');
                        var appendData = '<ul class="my-card-list" id="select-card">';
                        if(usedYn == "Y") {
                            appendData +='<li class="my-card-coupon used-deemed" >';
                        }else {
                            appendData +='<li class="my-card-coupon">';
                        }
                        appendData +='<div class="my-container">' +
                            '<div class="my-card">' +
                            '<figure class="front">' +
                            '<img class="base-img" src="/images/shop-coupon/'+ shopData.COUPON_IMG +'" alt="back">' +
                            '<div class="caption">';
                        if(usedYn == "Y") {
                            appendData += '<h5 class="delete-coupon" onclick="deleteCoupon(\''+ shopData.SHOP_ID +'\',\'' + shopData.COUPON_NUMBER +'\');">삭제하기</h5>' +
                                '<h3>' + shopData.SHOP_NAME + '<span>(' + shopData.SHOP_SUB_NAME + ')</span></h3>' +
                                '<h4>' + shopData.COUPON_NAME + '<span>' + shopData.COUPON_PRICE + '원</span></h4>' +
                                '<div class="coupon-name" id="use-coupon-date-btn">사용날짜 : <span style="font-size:1em;color:white">'+ shopData.USED_DT +'</span></div>' +
                                '<h6>✿ 유효 기간 : ' + shopData.EXPIRATION_DT + '</h6>';
                        }else {
                            appendData += '<h5 calss="coupon-use" onclick="useCoupon(\''+ shopData.SHOP_ID +'\',\'' + shopData.SHOP_NAME +'\',\'' + shopData.SHOP_SUB_NAME +'\',' +
                                '\'' + shopData.COUPON_NAME +'\',\'' + shopData.COUPON_NUMBER +'\');">사용하기</h5>' +
                                '<h3>' + shopData.SHOP_NAME + '<span>(' + shopData.SHOP_SUB_NAME + ')</span></h3>' +
                                '<h4>' + shopData.COUPON_NAME + '<span>' + shopData.COUPON_PRICE + '원</span></h4>' +
                                '<div class="coupon-name" id="use-coupon-date-btn">쿠폰 번호 : <span style="font-size:1em;color:white">'+ shopData.COUPON_NUMBER +'</span></div>' +
                                '<h6>✿ 유효 기간 : ' + shopData.EXPIRATION_DT + '</h6>';
                        }
                        appendData += '</div>' +
                            '</figure>' +
                            '</div>' +
                            '</div>' +
                            '</li>' +
                            '</ul>';
                        if($('#select-card').length) {
                            $('#select-card').remove();
                            appendId.append(appendData);
                        }else {
                            appendId.append(appendData);
                        }
                    },
                    error: function (request, status, error) {
                        console.log("code:" + request.status + "\n" + "message:" + request.responseText + "\n" + "error:" + error);
                        console.log('Error occured');
                    }
                });
            });

            if(i == 0) {
                daum.maps.event.trigger(marker, 'click', '');
            }

            return marker;
        });

        // 클러스터러에 마커들을 추가합니다
        clusterer.addMarkers(markers);
    }

    // 지도에 마커와 인포윈도우를 표시하는 함수입니다
    function displayMarker(currentMarkerPosition, currentMarkerImage) {
        map = new daum.maps.Map(document.getElementById('map'), { // 지도를 표시할 div
            center : currentMarkerPosition, // 지도의 중심좌표
            level : 8 // 지도의 확대 레벨
        });

        // 현재 위치 마커를 생성합니다
        var marker = new daum.maps.Marker({
            map: map,
            position: currentMarkerPosition,
            image: currentMarkerImage // 마커이미지 설정
        });
        marker.setMap(map);

        var currentIwContent = '<div style="padding:2px 0 3px 15px;">현재 위치입니다.</div>'; // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다

        var currentInfowindow = new daum.maps.InfoWindow({
            position : currentMarkerPosition,
            content : currentIwContent
        });

        currentInfowindow.open(map, marker);
    }

    function guidePapaShopLoad(shopLat, shopLng) {
        // 지도를 재설정할 범위정보를 가지고 있을 LatLngBounds 객체를 생성합니다
        var bounds = new daum.maps.LatLngBounds();

        var mouseEvent = {
            latLng: new daum.maps.LatLng(shopLat, shopLng)
        };

        daum.maps.event.trigger(map, 'click', mouseEvent);

        // LatLngBounds 객체에 좌표를 추가합니다
        bounds.extend(new daum.maps.LatLng(shopLat, shopLng));

        // LatLngBounds 객체에 추가된 좌표들을 기준으로 지도의 범위를 재설정합니다. 이때 지도의 중심좌표와 레벨이 변경될 수 있습니다
        map.setBounds(bounds);
    }

    // 지도 확대, 축소 컨트롤에서 확대 버튼을 누르면 호출되어 지도를 확대하는 함수입니다
    function zoomIn() {
        map.setLevel(map.getLevel() - 1);
    }

    // 지도 확대, 축소 컨트롤에서 축소 버튼을 누르면 호출되어 지도를 확대하는 함수입니다
    function zoomOut() {
        map.setLevel(map.getLevel() + 1);
    }
</script>